/*
	Create a T-SQL function in the [LIBRARY] database that returns a table consisting 
	of three columns: [NextNum], [NextDate], and [SeqNum].
	
    Function should support generating date values (yyyy-MM-dd)
	and whole numbers, both positive and negative, depending on type of sequence. 

	For numeric arithmetic sequences, support ascending and descending sequences by specifying either
	a positive or negative integer common difference. Each sequence term is incremented by the
	same value.

	For date sequences, the common difference date type must be specified to indicate a year.
	month, or day increment between terms of the sequence.

	For numeric sequences, the [NextNumber] column will be populated but the [NextDate] column 
	will not.

	For date sequences, the [NextDate] column will be populated but the [NextNumber] column will not.
	*******************************************************
	For geometric sequences, each successive term is generated by multiplying the previous 
	term by a positive integer common factor, say 2, which is also known as the ratio.
	
	Only support positive values for initial element.
	
	The [NextNumber] column will be populated but the [NextDate] column will not.
	*******************************************************
	For power sequences, the first term is the start value raised to the 0th power
	and each successive term is generated by incrementing the base value of the
	previous term by 1 and then raising the result to the specified exponent.
	
	Only positive integer values for the initial element and the exponent are allowed.

	The [NextNumber] column will be populated but the [NextDate] column will not.
	*******************************************************
	The [SequenceNumber] column lets the user select the Nth term of the sequence or 
	even a series of terms (pun intended) from the sequence.

	Will use recursive CTEs but CANNOT USE dynamic SQL inside a UDF. 

	Validating the inputs and acceptable combinations thereof (e.g. in an arithmetic
	sequence, ratio and exponent are ignored but start value must be LESS than
	end value if common difference is greater than 1, to avoid an infinite
	sequence. When common difference is a negative number, which specifies a descending 
	sequence, start value must be MORE than end value to avoid an infiinte sequence.
	*******************************************************
	In order to work with both integers and dates, it is necessary that the start and 
	end values be strings, which will be converted to the appropriate data type before
	generating a sequence.

	In the CTEs, MAXRECURSION is set to 1000 as a safety measure in case some edge case
	that would result in a very large or infinite sequence has not been considered in the 
	validation logic.
	*******************************************************
	The [SeqNum] column can be used to select a specific element or elements of a series.

	In a numeric series, the [NextDate] column will not be populated. In a date series, 
	the [NextNumber] column will not be populated.
	*******************************************************
	Since printing error messages doesn't seem to work in a UDF, a [Message] column has
	been added to the output table. In the event of a validation error, the table 
	will contain one record whose [Message] field will be populated with a description
	of the failed validation. Otherwise the [Message] column will not be populated.
	

*/
-- Comment template

/*
		  -----------------------------------------------------------------

		  -----------------------------------------------------------------
*/




USE LIBRARY
GO

DROP FUNCTION IF EXISTS dbo.GetSequentialData
GO

CREATE FUNCTION dbo.GetSequentialData
(
    -- 'N' for numeric, 'D' for date
	@DataType VARCHAR(1), 
	-- 'A' for arithmetic, 'P' for power, 'G' for geometric
	@SequenceType VARCHAR(1),
	-- Convert to date or number as needed
	@StartValue VARCHAR(20),  
	-- Convert to date or number as needed
	@EndValue VARCHAR(20),  
	-- For numeric and date sequences
	@CommonDifference INT = NULL,   
	-- 'Y' for year, 'M' for month, 'D', for day;
	@CommonDifferenceDateType VARCHAR(1) = NULL, 
	-- For geometric sequences only
	@Ratio INT = NULL,
	-- For power sequences only
	@Exponent INT = NULL                  
	
)
RETURNS @SeqData TABLE (
							[NextDate] DATE,
							[NextNum] INT,
							[SeqNum] INT,
							[Message] VARCHAR(MAX)
						)
AS

BEGIN
/*
		  -----------------------------------------------------------------
		  Validate inputs. Selections must match for type of sequence
		  desired. Ignore parameters not related to desired sequence
		  but exit early if incompatible parameters are provided.

		  Can't use RAISERROR in a UDF, so insert a row into the output
		  table with information about the error.
		  -----------------------------------------------------------------
*/
		-- Variable to hold error message passed to EXIT_EARLY code
		DECLARE @Message VARCHAR(MAX)  

		-- Variables holding validation failure messages for various parameters
		DECLARE @DataTypeCheck VARCHAR(300)
		DECLARE @SequenceTypeCheck VARCHAR(300)
		DECLARE @StartValueCheck VARCHAR(300)
		DECLARE @EndValueCheck VARCHAR(300)
		DECLARE @CommonDifferenceCheck VARCHAR(300)
		DECLARE @RatioCheck VARCHAR(300)
		DECLARE @ExponentCheck VARCHAR(300)
		DECLARE @CommonDifferenceDateTypeCheck VARCHAR(300)

		-- Variables holding various parameters converted to appropriate type
		-- for generating sequence of values.
		DECLARE @StartValueNumber INT
		DECLARE @StartValueDate DATE
		DECLARE @EndValueNumber INT
		DECLARE @EndValueDate DATE


/*
		  -----------------------------------------------------------------
		  FIRST ROUND VALIDATIONS checking for NULL, values < 0 where
		  appropriate and consistent selection of parameters, e.g. for 
		  arithmetic sequences the increment must not be zero; for
		  geometric sequences the ratio must be > 1; for power sequences
		  the exponent must be > 1.

		  Since there are a large number of conditions to check for,
		  using nested in line IIF() functions to make code more
		  compact, if not more readable.
		  -----------------------------------------------------------------
*/

		SET @DataTypeCheck = IIF(@DataType IS NULL,
								'@DataType is NULL.',
								IIF(@DataType NOT IN ('N','D'),
								    '@DataType must be ''N'' or ''D''.',
								    NULL))


		SET @SequenceTypeCheck = IIF(@SequenceType IS NULL,
		                             '@SequenceType is NULL.',
									 IIF(@DataType = 'N' AND @SequenceType NOT IN ('A','G','P'),
									     '@SequenceType must be ''A'' or ''G'' or ''P'' if @DataType is ''N''',
										 IIF(@DataType = 'D' AND @SequenceType <> 'A',
									         '@SequenceType must be ''A'' if @DataType is ''D''.',
									         NULL)))


		SET @StartValueCheck = IIF(@StartValue IS NULL,
		                           '@StartValue is NULL',
								   IIF(@DataType = 'N' AND ISNUMERIC(@StartValue) = 0,
		                              '@StartValue is not numeric',
								      IIF(@DataType = 'D' AND ISDATE(@StartValue) = 0,
								          '@StartValue is not a date',
										  IIF(@DataType = 'N' AND @SequenceType IN ('G', 'P')
										      AND @StartValue <= 1,
											  '@StartValue is less than or equal to 1.',
								          NULL))))
								   
		SET @EndValueCheck = IIF(@EndValue IS NULL,
		                         '@EndValue is NULL',
								 IIF(@DataType = 'N' AND ISNUMERIC(@EndValue) = 0,
		                             '@EndValue is not numeric',
								     IIF(@DataType = 'D' AND ISDATE(@EndValue) = 0,
								         '@EndValue is not a date',
								         NULL)))

		SET @CommonDifferenceCheck = IIF(@DataType IN ('N','D') AND @SequenceType = 'A' 
		                                  AND @CommonDifference IS NULL,
		                                  '@CommonDifference is NULL',
								          IIF(@DataType IN ('N','D') AND @SequenceType = 'A'
										       AND ISNUMERIC(@CommonDifference) = 0,
		                                      '@CommonDifference is not numeric',
											  IIF(@DataType IN ('N','D') AND @SequenceType = 'A'
											      AND @CommonDifference = 0,
												  '@CommonDifference is 0',
											      NULL)))
								  
		SET @CommonDifferenceDateTypeCheck = IIF(@DataType = 'D' 
											     AND @CommonDifferenceDateType IS NULL,
		                                         '@CommonDifferenceDateType is NULL',
												 IIF(@DataType = 'D' 
		                                         AND @CommonDifferenceDateType NOT IN('D','M','Y'),
												 '@CommonDifferenceDateType must be ''D'' or ''M'' or ''Y''.',
												 NULL))

		SET @RatioCheck = IIF(@DataType = 'N' AND @SequenceType = 'G' AND @Ratio IS NULL,
		                      '@Ratio is NULL',
							  IIF(@DataType = 'N' AND @SequenceType = 'G' AND ISNUMERIC(@Ratio) = 0,
		                      '@Ratio is not numeric',
							  IIF(@DataType = 'N' AND @SequenceType = 'G' AND @Ratio <= 1,
								  '@Ratio is less than or equal to 1',
								  NULL)))

		SET @ExponentCheck = IIF(@DataType = 'N' AND @SequenceType = 'P' AND @Exponent IS NULL,
		                         '@Exponent is NULL',
							     IIF(@DataType = 'N' AND @SequenceType = 'P' 
								     AND ISNUMERIC(@Exponent) = 0,
		                             '@Exponent is not numeric',
							         IIF(@DataType = 'N' AND @SequenceType = 'P' AND @Exponent <= 1,
								         '@Exponent is less than or equal to 1',
								          NULL)))


		SET @Message = CONCAT_WS(CHAR(10),
								 @DataTypeCheck,
								 @SequenceTypeCheck,
								 @StartValueCheck,
								 @EndValueCheck,
								 @CommonDifferenceCheck,
								 @CommonDifferenceDateTypeCheck,
								 @RatioCheck,
								 @ExponentCheck)
					   

		IF @Message <> ''
			BEGIN
				GOTO EXIT_EARLY
			END


/*
		  -----------------------------------------------------------------
		  SECOND ROUND VALIDATIONS Now that data type and sequence type
		  have been determined, convert start and end values to corresponding
		  data type and ensure that start value < end value. Also, for 
		  arithmetic sequences, the common difference must be less than
		  the difference between the start and end values.
		  -----------------------------------------------------------------
*/
		IF @DataType = 'N' AND @SequenceType = 'A'
			BEGIN
				SET @StartValueNumber = CAST(@StartValue AS INT)
				SET @EndValueNumber = CAST(@EndValue AS INT)
				IF (@CommonDifference >= 1) AND (@StartValueNumber >= @EndValueNumber)
					BEGIN
						SET @Message = '@StartValue is greater than or equal to @EndValue'
						GOTO EXIT_EARLY
					END

				IF (@CommonDifference < 1) AND (@StartValueNumber <= @EndValueNumber)
					BEGIN
						SET @Message = '@StartValue is less than or equal to @EndValue'
						GOTO EXIT_EARLY
					END

				IF ABS(@CommonDifference) > ABS(@StartValueNumber - @EndValueNumber)
					BEGIN
						SET @Message = '@CommonDifference is greater than the difference between @StartValue and @EndValue'
						GOTO EXIT_EARLY
					END
			END


		IF @DataType = 'N' AND @SequenceType IN('G', 'P')
			BEGIN
				SET @StartValueNumber = CAST(@StartValue AS INT)
				SET @EndValueNumber = CAST(@EndValue AS INT)
				IF @StartValueNumber >= @EndValueNumber
					BEGIN
						SET @Message = '@StartValue is greater than or equal to @EndValue'
						GOTO EXIT_EARLY
					END
			END

		-- For dates, 'A' is the only valid sequence. This was tested earlier.
		-- @CommonDifference is the number of months between sequence elements
		IF @DataType = 'D'
			BEGIN
				DECLARE @Difference INT

				SET @StartValueDate = CAST(@StartValue AS DATE)
				SET @EndValueDate = CAST(@EndValue AS DATE)

				IF (@CommonDifference >= 1) AND (@StartValueDate >= @EndValueDate)
					BEGIN
						SET @Message = '@StartValue is greater than or equal to @EndValue'
						GOTO EXIT_EARLY
					END

				IF (@CommonDifference < 1) AND (@StartValueDate <= @EndValueDate)
					BEGIN
						SET @Message = '@StartValue is less than or equal to @EndValue'
						GOTO EXIT_EARLY
					END
			
				IF @CommonDifferenceDateType = 'Y'
					BEGIN
						SET @Difference = DATEDIFF(YEAR, @StartValueDate, @EndValueDate)
					END

				IF @CommonDifferenceDateType = 'M'
						BEGIN
							SET @Difference = DATEDIFF(MONTH, @StartValueDate, @EndValueDate)
						END

				IF @CommonDifferenceDateType = 'D'
						BEGIN
							SET @Difference = DATEDIFF(DAY, @StartValueDate, @EndValueDate)
						END

				IF ABS(@CommonDifference) > ABS(@Difference)
					BEGIN
						SET @Message = '@CommonDifference is greater than the difference between @StartValue and @EndValue'
						GOTO EXIT_EARLY
					END
			END
					


		IF @DataType = 'N' AND @SequenceType = 'G'
			BEGIN
				SET @StartValueNumber = CAST(@StartValue AS INT)
				SET @EndValueNumber = CAST(@EndValue AS INT)
				IF @StartValueNumber >= @EndValueNumber
					BEGIN
						SET @Message = '@StartValue is greater than or equal to @EndValue'
						GOTO EXIT_EARLY
					END
			END


		IF @DataType = 'N' AND @SequenceType = 'P'
			BEGIN
				SET @StartValueNumber = CAST(@StartValue AS INT)
				SET @EndValueNumber = CAST(@EndValue AS INT)
				IF @StartValueNumber >= @EndValueNumber
					BEGIN
						SET @Message = '@StartValue is greater than or equal to @EndValue'
						GOTO EXIT_EARLY
					END
			END



/*
		  -----------------------------------------------------------------
		  Generate arithmetic sequence for numbers
		  -----------------------------------------------------------------
*/
		IF @DataType = 'N' AND @SequenceType = 'A' AND @CommonDifference >= 1
			BEGIN
				;WITH CTE([NextNumber], [SeqNum]) AS 
				(
					SELECT @StartValueNumber, 1

					UNION ALL

					SELECT [NextNumber] + @CommonDifference, [SeqNum] + 1
					FROM CTE
					WHERE ABS([NextNumber]- @EndValueNumber) >= @CommonDifference
				)
				INSERT INTO @SeqData ([NextNum], [SeqNum])
				SELECT CTE.[NextNumber], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'N' AND @SequenceType = 'A' AND @CommonDifference > 1


		IF @DataType = 'N' AND @SequenceType = 'A' AND @CommonDifference < 1
			BEGIN
				;WITH CTE([NextNumber], [SeqNum]) AS 
				(
					SELECT @StartValueNumber, 1

					UNION ALL

					SELECT [NextNumber] + @CommonDifference, [SeqNum] + 1
					FROM CTE
					WHERE ABS([NextNumber]- @EndValueNumber) >= ABS(@CommonDifference) --[NextNumber] > @EndValueNumber
				)
				INSERT INTO @SeqData ([NextNum], [SeqNum])
				SELECT CTE.[NextNumber], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END --@DataType = 'N' AND @SequenceType = 'A' AND @CommonDifference < 1


/*
		  -----------------------------------------------------------------
		  Generate arithmetic sequence for dates
		  -----------------------------------------------------------------
*/
		IF @DataType = 'D' AND @CommonDifferenceDateType = 'Y'
			BEGIN
				;WITH CTE([NextDate], [SeqNum]) AS 
				(
					SELECT @StartValueDate, 1

					UNION ALL

					SELECT DATEADD(YEAR, @CommonDifference,[NextDate]), [SeqNum] + 1
					FROM CTE
					WHERE ABS(DATEDIFF(YEAR,[NextDate], @EndValueDate)) >= ABS(@CommonDifference)
				)
				INSERT INTO @SeqData ([NextDate], [SeqNum])
				SELECT CTE.[NextDate], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'D' AND @CommonDifferenceDateType = 'Y'


		IF @DataType = 'D' AND @CommonDifferenceDateType = 'M'
			BEGIN
				;WITH CTE([NextDate], [SeqNum]) AS 
				(
					SELECT @StartValueDate, 1

					UNION ALL

					SELECT DATEADD(MONTH, @CommonDifference,[NextDate]), [SeqNum] + 1
					FROM CTE
					WHERE ABS(DATEDIFF(MONTH,[NextDate], @EndValueDate)) >= ABS(@CommonDifference)
				)
				INSERT INTO @SeqData ([NextDate], [SeqNum])
				SELECT CTE.[NextDate], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'D' AND @CommonDifferenceDateType = 'M'


		IF @DataType = 'D' AND @CommonDifferenceDateType = 'D'
			BEGIN
				;WITH CTE([NextDate], [SeqNum]) AS 
				(
					SELECT @StartValueDate, 1

					UNION ALL

					SELECT DATEADD(DAY, @CommonDifference,[NextDate]), [SeqNum] + 1
					FROM CTE
					WHERE ABS(DATEDIFF(DAY,[NextDate], @EndValueDate)) >= ABS(@CommonDifference)
				)
				INSERT INTO @SeqData ([NextDate], [SeqNum])
				SELECT CTE.[NextDate], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'D' AND @CommonDifferenceDateType = 'D'


/*
		  -----------------------------------------------------------------
		  Generate geometric sequence, which applies only to numbers
		  -----------------------------------------------------------------
*/

		IF @DataType = 'N' AND @SequenceType = 'G' AND @Ratio > 1
			BEGIN
				;WITH CTE([NextNumber], [SeqNum]) AS 
				(
					SELECT @StartValueNumber, 1

					UNION ALL

					SELECT [NextNumber] * @Ratio, [SeqNum] + 1
					FROM CTE
					WHERE [NextNumber] * @Ratio < @EndValueNumber
				)
				INSERT INTO @SeqData ([NextNum], [SeqNum])
				SELECT CTE.[NextNumber], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'N' AND @SequenceType = 'G' AND @Ratio > 1


/*
		  -----------------------------------------------------------------
		  Generate power sequence, which applies only to numbers. Increment
		  @Exponent by one and continue until @EndValue is reached
		  or exceeded. For example: 2^1, 2^2, 3^2, 4^2... until limit, say
		  64, is reached
		  -----------------------------------------------------------------
*/

		IF @DataType = 'N' AND @SequenceType = 'P' AND @Exponent > 1
			BEGIN
				;WITH CTE([NextNumber], [BaseNumber], [SeqNum]) AS 
				(
					SELECT @StartValueNumber, @StartValueNumber, 1

					UNION ALL

					SELECT POWER([BaseNumber], (@Exponent * 1.0)), [BaseNumber] + 1, [SeqNum] + 1
					FROM CTE
					WHERE POWER([BaseNumber], (@Exponent * 1.0)) <= @EndValueNumber 
				)
				INSERT INTO @SeqData ([NextNum], [SeqNum])
				SELECT CTE.[NextNumber], [SeqNum]
				FROM CTE
				OPTION(MAXRECURSION 1000)
			END -- @DataType = 'N' AND @SequenceType = 'P' AND @Exponent > 1



RETURN


EXIT_EARLY:
INSERT INTO @SeqData
(
	Message
)
VALUES
(
	@Message
)



RETURN

END



-- Test dbo.GetSequentialData()
SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',1,1,1) 
/*
NextDate   NextNum     SeqNum
---------- ----------- -----------

(0 rows affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('X','A','1','10',1,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @DataType must be 'N' or 'D'

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData(NULL,'A','1','10',1,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @DataType is NULL.

(1 row affected)

*/
SELECT *

FROM 
	dbo.GetSequentialData('D','G','1','10',1,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @SequenceType must be 'A' if @DataType is 'D'.
								   @StartValue is not a date
								   @EndValue is not a date

(1 row affected)

*/

SELECT *

FROM 
	dbo.GetSequentialData('D','A','2021-04-22','10',1,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @EndValue is not a date

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2021-04-22','2022-09-08',-15,-4,-8) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifference is less than 0

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','G','2021-04-22','2022-09-08',-15,-4,-8) 
/*
NULL       NULL        NULL        @StartValue is not numeric
								   @EndValue is not numeric
								   @CommonDifference is less than 0
								   @Ratio is less than or equal to 0

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','P','2021','2022',-15,-4,-8) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @Exponent is less than or equal to 0

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('D','P','2021','2022',-15,-4,1) 

/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @SequenceType must be 'A' if @DataType is 'D'.

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','A','-500','750',-15,-4,-22) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

(0 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','G','-500','750',0,-4, 2) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @Ratio is less than or equal to 1

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A',NULL,'2022',5,-4,-1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is NULL

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       1           1           NULL
NULL       2           2           NULL
NULL       3           3           NULL
NULL       4           4           NULL
NULL       5           5           NULL
NULL       6           6           NULL
NULL       7           7           NULL
NULL       8           8           NULL
NULL       9           9           NULL
NULL       10          10          NULL

(10 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',1,DEFAULT,1,1) 
WHERE [SeqNum] BETWEEN 2 AND 6
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       2           2           NULL
NULL       3           3           NULL
NULL       4           4           NULL
NULL       5           5           NULL
NULL       6           6           NULL

(5 rows affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',-1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)

*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','10','1',-1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       10          1           NULL
NULL       9           2           NULL
NULL       8           3           NULL
NULL       7           4           NULL
NULL       6           5           NULL
NULL       5           6           NULL
NULL       4           7           NULL
NULL       3           8           NULL
NULL       2           9           NULL
NULL       1           10          NULL

(10 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','10','1',0,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifference is 0

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-5','15',-1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-5','15',1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       -5          1           NULL
NULL       -4          2           NULL
NULL       -3          3           NULL
NULL       -2          4           NULL
NULL       -1          5           NULL
NULL       0           6           NULL
NULL       1           7           NULL
NULL       2           8           NULL
NULL       3           9           NULL
NULL       4           10          NULL
NULL       5           11          NULL
NULL       6           12          NULL
NULL       7           13          NULL
NULL       8           14          NULL
NULL       9           15          NULL
NULL       10          16          NULL
NULL       11          17          NULL
NULL       12          18          NULL
NULL       13          19          NULL
NULL       14          20          NULL
NULL       15          21          NULL

(21 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','15','15',1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is greater than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','15','1',-1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       15          1           NULL
NULL       14          2           NULL
NULL       13          3           NULL
NULL       12          4           NULL
NULL       11          5           NULL
NULL       10          6           NULL
NULL       9           7           NULL
NULL       8           8           NULL
NULL       7           9           NULL
NULL       6           10          NULL
NULL       5           11          NULL
NULL       4           12          NULL
NULL       3           13          NULL
NULL       2           14          NULL
NULL       1           15          NULL

(15 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',25,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifference is greater than the difference between @StartValue and @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',10,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifference is greater than the difference between @StartValue and @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','1','10',9,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       1           1           NULL
NULL       10          2           NULL

(2 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-80','-10',70,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       -80         1           NULL
NULL       -10         2           NULL

(2 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-50','-50',-5,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-50','-5',-5,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','-50','-5',5,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       -50         1           NULL
NULL       -45         2           NULL
NULL       -40         3           NULL
NULL       -35         4           NULL
NULL       -30         5           NULL
NULL       -25         6           NULL
NULL       -20         7           NULL
NULL       -15         8           NULL
NULL       -10         9           NULL
NULL       -5          10          NULL

(10 rows affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('n','a','1','10',1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       1           1           NULL
NULL       2           2           NULL
NULL       3           3           NULL
NULL       4           4           NULL
NULL       5           5           NULL
NULL       6           6           NULL
NULL       7           7           NULL
NULL       8           8           NULL
NULL       9           9           NULL
NULL       10          10          NULL

(10 rows affected)
*/

-- Now starting to support date sequences so @CommonDifferenceDateType is required
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2015-01-01','2017-12-31',1,DEFAULT,0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifferenceDateType is NULL

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('n','a','1','10',1,DEFAULT,1,1) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       1           1           NULL
NULL       2           2           NULL
NULL       3           3           NULL
NULL       4           4           NULL
NULL       5           5           NULL
NULL       6           6           NULL
NULL       7           7           NULL
NULL       8           8           NULL
NULL       9           9           NULL
NULL       10          10          NULL

(10 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2015-01-01','2015-01-01',1,'Y',0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is greater than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2020-01-01','2015-01-01',1,'Y',0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is greater than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2015-01-01','2021-01-01',1,'Y',0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2015-01-01 NULL        1           NULL
2016-01-01 NULL        2           NULL
2017-01-01 NULL        3           NULL
2018-01-01 NULL        4           NULL
2019-01-01 NULL        5           NULL
2020-01-01 NULL        6           NULL
2021-01-01 NULL        7           NULL

(7 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2015-01-01','2021-01-01',10,'Y',0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @CommonDifference is greater than the difference between @StartValue and @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2015-01-01','2021-01-01',-2,'Y',0,0) 
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-01-01','2021-01-01',2,'Y',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is greater than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','P','2023-01-01','2021-01-01',-1,'Y',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @SequenceType must be 'A' if @DataType is 'D'.

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-01-01','2021-01-01',-1,'Y',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2023-01-01 NULL        1           NULL
2022-01-01 NULL        2           NULL
2021-01-01 NULL        3           NULL

(3 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-01-01','2021-01-01',-1,'M',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2023-01-01 NULL        1           NULL
2022-12-01 NULL        2           NULL
2022-11-01 NULL        3           NULL
2022-10-01 NULL        4           NULL
2022-09-01 NULL        5           NULL
2022-08-01 NULL        6           NULL
2022-07-01 NULL        7           NULL
2022-06-01 NULL        8           NULL
2022-05-01 NULL        9           NULL
2022-04-01 NULL        10          NULL
2022-03-01 NULL        11          NULL
2022-02-01 NULL        12          NULL
2022-01-01 NULL        13          NULL
2021-12-01 NULL        14          NULL
2021-11-01 NULL        15          NULL
2021-10-01 NULL        16          NULL
2021-09-01 NULL        17          NULL
2021-08-01 NULL        18          NULL
2021-07-01 NULL        19          NULL
2021-06-01 NULL        20          NULL
2021-05-01 NULL        21          NULL
2021-04-01 NULL        22          NULL
2021-03-01 NULL        23          NULL
2021-02-01 NULL        24          NULL
2021-01-01 NULL        25          NULL

(25 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2016-09-01','2018-11-01',5,'M',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2016-09-01 NULL        1           NULL
2017-02-01 NULL        2           NULL
2017-07-01 NULL        3           NULL
2017-12-01 NULL        4           NULL
2018-05-01 NULL        5           NULL
2018-10-01 NULL        6           NULL

(6 rows affected)
*/

SELECT DATEDIFF(MONTH, '2016-09-01', '2018-11-01') [Difference In Months]
/*
Difference In Months
--------------------
26

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2018-09-01','2017-11-01',-1,'M',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2018-09-01 NULL        1           NULL
2018-08-01 NULL        2           NULL
2018-07-01 NULL        3           NULL
2018-06-01 NULL        4           NULL
2018-05-01 NULL        5           NULL
2018-04-01 NULL        6           NULL
2018-03-01 NULL        7           NULL
2018-02-01 NULL        8           NULL
2018-01-01 NULL        9           NULL
2017-12-01 NULL        10          NULL
2017-11-01 NULL        11          NULL

(11 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-09-01','2023-10-01',1,'D',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2023-09-01 NULL        1           NULL
2023-09-02 NULL        2           NULL
2023-09-03 NULL        3           NULL
2023-09-04 NULL        4           NULL
2023-09-05 NULL        5           NULL
2023-09-06 NULL        6           NULL
2023-09-07 NULL        7           NULL
2023-09-08 NULL        8           NULL
2023-09-09 NULL        9           NULL
2023-09-10 NULL        10          NULL
2023-09-11 NULL        11          NULL
2023-09-12 NULL        12          NULL
2023-09-13 NULL        13          NULL
2023-09-14 NULL        14          NULL
2023-09-15 NULL        15          NULL
2023-09-16 NULL        16          NULL
2023-09-17 NULL        17          NULL
2023-09-18 NULL        18          NULL
2023-09-19 NULL        19          NULL
2023-09-20 NULL        20          NULL
2023-09-21 NULL        21          NULL
2023-09-22 NULL        22          NULL
2023-09-23 NULL        23          NULL
2023-09-24 NULL        24          NULL
2023-09-25 NULL        25          NULL
2023-09-26 NULL        26          NULL
2023-09-27 NULL        27          NULL
2023-09-28 NULL        28          NULL
2023-09-29 NULL        29          NULL
2023-09-30 NULL        30          NULL
2023-10-01 NULL        31          NULL

(31 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2008-01-01','2007-12-25',-1,'D',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2008-01-01 NULL        1           NULL
2007-12-31 NULL        2           NULL
2007-12-30 NULL        3           NULL
2007-12-29 NULL        4           NULL
2007-12-28 NULL        5           NULL
2007-12-27 NULL        6           NULL
2007-12-26 NULL        7           NULL
2007-12-25 NULL        8           NULL

(8 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','20900-01-01','232-12-25',-1,'D',0,0)

/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is not a date
								   @EndValue is not a date

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-01-01','2023-12-31',-1,'D',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to @EndValue

(1 row affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('D','A','2023-01-01','2023-12-31',15,'D',0,0)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2023-01-01 NULL        1           NULL
2023-01-16 NULL        2           NULL
2023-01-31 NULL        3           NULL
2023-02-15 NULL        4           NULL
2023-03-02 NULL        5           NULL
2023-03-17 NULL        6           NULL
2023-04-01 NULL        7           NULL
2023-04-16 NULL        8           NULL
2023-05-01 NULL        9           NULL
2023-05-16 NULL        10          NULL
2023-05-31 NULL        11          NULL
2023-06-15 NULL        12          NULL
2023-06-30 NULL        13          NULL
2023-07-15 NULL        14          NULL
2023-07-30 NULL        15          NULL
2023-08-14 NULL        16          NULL
2023-08-29 NULL        17          NULL
2023-09-13 NULL        18          NULL
2023-09-28 NULL        19          NULL
2023-10-13 NULL        20          NULL
2023-10-28 NULL        21          NULL
2023-11-12 NULL        22          NULL
2023-11-27 NULL        23          NULL
2023-12-12 NULL        24          NULL
2023-12-27 NULL        25          NULL

(25 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','A','10','100',17,DEFAULT,DEFAULT,DEFAULT)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       10          1           NULL
NULL       27          2           NULL
NULL       44          3           NULL
NULL       61          4           NULL
NULL       78          5           NULL
NULL       95          6           NULL

(6 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','G','0','100',DEFAULT,DEFAULT,3,DEFAULT)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to 1.

(1 row affected)

*/
SELECT *

FROM 
	dbo.GetSequentialData('N','G','2','64',DEFAULT,DEFAULT,3,DEFAULT)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       2           1           NULL
NULL       6           2           NULL
NULL       18          3           NULL
NULL       54          4           NULL

(4 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','P','2','64',DEFAULT,DEFAULT,DEFAULT,2)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       2           1           NULL
NULL       4           2           NULL
NULL       9           3           NULL
NULL       16          4           NULL
NULL       25          5           NULL
NULL       36          6           NULL
NULL       49          7           NULL
NULL       64          8           NULL

(8 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','P','10','10000',DEFAULT,DEFAULT,DEFAULT,3)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       10          1           NULL
NULL       1000        2           NULL
NULL       1331        3           NULL
NULL       1728        4           NULL
NULL       2197        5           NULL
NULL       2744        6           NULL
NULL       3375        7           NULL
NULL       4096        8           NULL
NULL       4913        9           NULL
NULL       5832        10          NULL
NULL       6859        11          NULL
NULL       8000        12          NULL
NULL       9261        13          NULL

(13 rows affected)
*/
SELECT *

FROM 
	dbo.GetSequentialData('N','P','1','10',DEFAULT,DEFAULT,DEFAULT,3)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is less than or equal to 1.

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','P','150','10',DEFAULT,DEFAULT,DEFAULT,2)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @Exponent is less than or equal to 1

(1 row affected)
*/

SELECT *

FROM 
	dbo.GetSequentialData('N','P','150','10',DEFAULT,DEFAULT,DEFAULT,2)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       NULL        NULL        @StartValue is greater than or equal to @EndValue

(1 row affected)

*/
SELECT *

FROM 
	dbo.GetSequentialData('N','P','10','1000',DEFAULT,DEFAULT,DEFAULT,2)
/*
NextDate   NextNum     SeqNum      Message
---------- ----------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL       10          1           NULL
NULL       100         2           NULL
NULL       121         3           NULL
NULL       144         4           NULL
NULL       169         5           NULL
NULL       196         6           NULL
NULL       225         7           NULL
NULL       256         8           NULL
NULL       289         9           NULL
NULL       324         10          NULL
NULL       361         11          NULL
NULL       400         12          NULL
NULL       441         13          NULL
NULL       484         14          NULL
NULL       529         15          NULL
NULL       576         16          NULL
NULL       625         17          NULL
NULL       676         18          NULL
NULL       729         19          NULL
NULL       784         20          NULL
NULL       841         21          NULL
NULL       900         22          NULL
NULL       961         23          NULL

(23 rows affected)
*/









SELECT ISNUMERIC('a344')
SELECT ISDATE('2023-11-33')

SELECT CONCAT_WS(CHAR(10),'Hello',GETDATE(),5566.44, 900, NULL)
/*
------------------------------------------------------------------------------------------------------
Hello
Mar 30 2023  3:23PM
5566.44
900
*/
SELECT ISDATE(NULL)
DECLARE @RESULT VARCHAR(100)
SELECT @RESULT = CONCAT_WS(CHAR(10),NULL, NULL, NULL) 
IF @RESULT = '' PRINT 'Empty string 123'